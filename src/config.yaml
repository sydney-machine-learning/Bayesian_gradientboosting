# Classification datasets
# - ionosphere
# - cancer
# - bank
# - pendigit
#
# Regression datasets
# - sunspot
# - rossler
# - henon
# - lazer
data: "sunspot"
num_nets: 5               # Number of weak learners to train
cuda: true                # Use GPU

# Options for MCMC sampling
mcmc: true
simultaneous: true
parallel_tempering: true

# Train on multistep version on the problem
# ( Only applies for timeseries regression problems )
multistep: false

plot_graphs: false              # Plot diagnostic graphs for MCMC

backprop_params:
  lr: 0.01                  # Learning rate
  exps: 30                   # Number of experiments to run 
  optimizer: adam           # "adam" or "sgd"

mcmc_params:
  lr: 0.1                  # Learning rate
  optimizer: sgd           # "adam" or "sgd"
  samples: 10000                  # Number of samples to generate
  burn_in: 5000                  # Burn in samples
  step_w:                         # Variance for random walk weight steps, use 0.01 for classification and 0.0025 for regression
    classification: 0.01
    regression: 0.0025            # Use 0.01 for multistep
  #step_eta: 0.0025               # Use 0.0025?
  langevin_gradients: true        # Use langevin gradients
  lg_rate: 0.2                    # Rate for langevin gradients

  # Parallel tempering parameters
  num_chains: 10
  swap_ratio: 0.02
  swap_interval: 20               # int(swap_ratio*num_samples/num_chains)
  maxtemp: 10
  geometric: true